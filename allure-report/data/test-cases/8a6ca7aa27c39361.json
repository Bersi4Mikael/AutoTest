{"uid":"8a6ca7aa27c39361","name":"Тест на заголовок страницы","fullName":"tests.test_login#test_links","historyId":"9527542e28072a1f3a8f091893ed8d6e","time":{"start":1714221085727,"stop":1714221111936,"duration":26209},"status":"failed","statusMessage":"Failed: Failed to load link: https://www.seduce.nl/, Step: Opening page. Error: Message:","statusTrace":"link = 'https://www.seduce.nl/'\n\n    @pytest.mark.parametrize(\"link\", get_links())\n    @allure.feature(\"Моя фича\")\n    @allure.story(\"Мой сценарий\")\n    @allure.title(\"Тест на заголовок страницы\")\n    def test_links(link):\n        # Запускаем веб-браузер перед каждым тестом\n        options = webdriver.ChromeOptions()\n        driver = webdriver.Chrome()  # Укажите путь к исполняемому файлу браузера, если он отличается от Chrome\n        driver = webdriver.Chrome(options=options)\n        driver.set_window_size(1280, 1024)\n    \n        try:\n            # Переходим по ссылке\n            driver.get(link)\n    \n            # Используем WebDriverWait для ожидания загрузки страницы\n>           WebDriverWait(driver, wait_time).until(EC.title_contains(\"escort\"))\n\ntests\\test_login.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6036bf434f0aa848e0bf9c4842b28804\")>\nmethod = <function title_contains.<locals>._predicate at 0x0000027CC5C5F6A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\bersi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nlink = 'https://www.seduce.nl/'\n\n    @pytest.mark.parametrize(\"link\", get_links())\n    @allure.feature(\"Моя фича\")\n    @allure.story(\"Мой сценарий\")\n    @allure.title(\"Тест на заголовок страницы\")\n    def test_links(link):\n        # Запускаем веб-браузер перед каждым тестом\n        options = webdriver.ChromeOptions()\n        driver = webdriver.Chrome()  # Укажите путь к исполняемому файлу браузера, если он отличается от Chrome\n        driver = webdriver.Chrome(options=options)\n        driver.set_window_size(1280, 1024)\n    \n        try:\n            # Переходим по ссылке\n            driver.get(link)\n    \n            # Используем WebDriverWait для ожидания загрузки страницы\n            WebDriverWait(driver, wait_time).until(EC.title_contains(\"escort\"))\n    \n            # Закрытие приветственного окна\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//*[@id='render-box']/button\"))\n            )\n            element.click()\n    \n            # Переход на Стр. авторизации\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[@class='hamburger']\"))\n            )\n            element.click()\n    \n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"/html/body/header/div[4]/nav/ul/li[22]\"))\n            )\n            element.click(), f\"Failed to load link: {link}, Step: Login page\"\n    \n            # Ввод данных и вход\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//input[@id='form-user']\"))\n            )\n            element.send_keys(\"Cawinom212\")\n    \n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//input[@id='form-pass']\"))\n            )\n            element.send_keys(\"Cawinom212\")\n    \n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//input[@id='submit-login']\"))\n            )\n            element.click()\n    \n            # Далее можно добавить какие-то проверки на содержимое страницы или другие действия\n            # Пример: Проверка, что заголовок страницы содержит определенный текст\n            assert \"escort\" in driver.title, f\"Failed to load link: {link}, Step: Opening page\"\n    \n        except Exception as e:\n            # Если произошла ошибка, добавляем ее в отчет pytest с указанием шага\n>           pytest.fail(f\"Failed to load link: {link}, Step: Opening page. Error: {e}\")\nE           Failed: Failed to load link: https://www.seduce.nl/, Step: Opening page. Error: Message:\n\ntests\\test_login.py:76: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Моя фича"},{"name":"story","value":"Мой сценарий"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"Bersi4Mikael"},{"name":"thread","value":"12816-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://www.seduce.nl/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"2a3d9909378a05a1","status":"failed","statusDetails":"Failed: Failed to load link: https://www.seduce.nl/, Step: Opening page. Error: Message:","time":{"start":1714220053373,"stop":1714220079209,"duration":25836}},{"uid":"86a3bf8d91e0dda9","status":"failed","statusDetails":"Failed: Failed to load link: https://www.seduce.nl/, Step: Opening page. Error: Message:","time":{"start":1714219231678,"stop":1714219257866,"duration":26188}},{"uid":"2b6583c30317875d","status":"failed","statusDetails":"Failed: Failed to load link: https://www.seduce.nl/, Step: Opening page. Error: Message:","time":{"start":1714213753356,"stop":1714213779511,"duration":26155}},{"uid":"cc95579a0a78531c","status":"failed","statusDetails":"Failed: Failed to load link: https://www.seduce.nl/, Step: Opening page. Error: Message:","time":{"start":1713978178150,"stop":1713978200724,"duration":22574}}]},"tags":[]},"source":"8a6ca7aa27c39361.json","parameterValues":["'https://www.seduce.nl/'"]}