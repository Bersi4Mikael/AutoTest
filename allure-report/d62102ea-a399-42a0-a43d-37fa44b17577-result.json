{"name": "Тест на заголовок страницы", "status": "failed", "statusDetails": {"message": "Failed: Failed to load link: https://www.zuzana.com/, Step: Opening page. Error: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6DA151502+60802]\n\t(No symbol) [0x00007FF6DA0CAC02]\n\t(No symbol) [0x00007FF6D9F87CE4]\n\t(No symbol) [0x00007FF6D9FD6D4D]\n\t(No symbol) [0x00007FF6D9FD6E1C]\n\t(No symbol) [0x00007FF6DA01CE37]\n\t(No symbol) [0x00007FF6D9FFABBF]\n\t(No symbol) [0x00007FF6DA01A224]\n\t(No symbol) [0x00007FF6D9FFA923]\n\t(No symbol) [0x00007FF6D9FC8FEC]\n\t(No symbol) [0x00007FF6D9FC9C21]\n\tGetHandleVerifier [0x00007FF6DA45411D+3217821]\n\tGetHandleVerifier [0x00007FF6DA4960B7+3488055]\n\tGetHandleVerifier [0x00007FF6DA48F03F+3459263]\n\tGetHandleVerifier [0x00007FF6DA20B846+823494]\n\t(No symbol) [0x00007FF6DA0D5F9F]\n\t(No symbol) [0x00007FF6DA0D0EC4]\n\t(No symbol) [0x00007FF6DA0D1052]\n\t(No symbol) [0x00007FF6DA0C18A4]\n\tBaseThreadInitThunk [0x00007FFABAC3257D+29]\n\tRtlUserThreadStart [0x00007FFABC10AA48+40]", "trace": "link = 'https://www.zuzana.com/'\n\n    @pytest.mark.parametrize(\"link\", get_links())\n    @allure.feature(\"Моя фича\")\n    @allure.story(\"Мой сценарий\")\n    @allure.title(\"Тест на заголовок страницы\")\n    def test_links(link):\n        # Запускаем веб-браузер перед каждым тестом\n        options = webdriver.ChromeOptions()\n        driver = webdriver.Chrome()  # Укажите путь к исполняемому файлу браузера, если он отличается от Chrome\n        driver = webdriver.Chrome(options=options)\n        driver.set_window_size(1280, 1024)\n    \n        try:\n            # Переходим по ссылке\n            driver.get(link)\n    \n            # Используем WebDriverWait для ожидания загрузки страницы\n            WebDriverWait(driver, wait_time).until(EC.title_contains(\"escort\"))\n    \n            # Закрытие приветственного окна\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//*[@id='render-box']/button\"))\n            )\n            element.click()\n    \n            # Переход на Стр. авторизации\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[@class='hamburger']\"))\n            )\n            element.click()\n    \n>           element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"/html/body/header/div[4]/nav/ul/li[22]\"))\n            )\n\ntests\\test_login.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f01a253122619d38e64a763d88890759\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000027CC90E9F80>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6DA151502+60802]\nE       \t(No symbol) [0x00007FF6DA0CAC02]\nE       \t(No symbol) [0x00007FF6D9F87CE4]\nE       \t(No symbol) [0x00007FF6D9FD6D4D]\nE       \t(No symbol) [0x00007FF6D9FD6E1C]\nE       \t(No symbol) [0x00007FF6DA01CE37]\nE       \t(No symbol) [0x00007FF6D9FFABBF]\nE       \t(No symbol) [0x00007FF6DA01A224]\nE       \t(No symbol) [0x00007FF6D9FFA923]\nE       \t(No symbol) [0x00007FF6D9FC8FEC]\nE       \t(No symbol) [0x00007FF6D9FC9C21]\nE       \tGetHandleVerifier [0x00007FF6DA45411D+3217821]\nE       \tGetHandleVerifier [0x00007FF6DA4960B7+3488055]\nE       \tGetHandleVerifier [0x00007FF6DA48F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF6DA20B846+823494]\nE       \t(No symbol) [0x00007FF6DA0D5F9F]\nE       \t(No symbol) [0x00007FF6DA0D0EC4]\nE       \t(No symbol) [0x00007FF6DA0D1052]\nE       \t(No symbol) [0x00007FF6DA0C18A4]\nE       \tBaseThreadInitThunk [0x00007FFABAC3257D+29]\nE       \tRtlUserThreadStart [0x00007FFABC10AA48+40]\n\nC:\\Users\\bersi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nlink = 'https://www.zuzana.com/'\n\n    @pytest.mark.parametrize(\"link\", get_links())\n    @allure.feature(\"Моя фича\")\n    @allure.story(\"Мой сценарий\")\n    @allure.title(\"Тест на заголовок страницы\")\n    def test_links(link):\n        # Запускаем веб-браузер перед каждым тестом\n        options = webdriver.ChromeOptions()\n        driver = webdriver.Chrome()  # Укажите путь к исполняемому файлу браузера, если он отличается от Chrome\n        driver = webdriver.Chrome(options=options)\n        driver.set_window_size(1280, 1024)\n    \n        try:\n            # Переходим по ссылке\n            driver.get(link)\n    \n            # Используем WebDriverWait для ожидания загрузки страницы\n            WebDriverWait(driver, wait_time).until(EC.title_contains(\"escort\"))\n    \n            # Закрытие приветственного окна\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//*[@id='render-box']/button\"))\n            )\n            element.click()\n    \n            # Переход на Стр. авторизации\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//div[@class='hamburger']\"))\n            )\n            element.click()\n    \n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"/html/body/header/div[4]/nav/ul/li[22]\"))\n            )\n            element.click(), f\"Failed to load link: {link}, Step: Login page\"\n    \n            # Ввод данных и вход\n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//input[@id='form-user']\"))\n            )\n            element.send_keys(\"Cawinom212\")\n    \n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//input[@id='form-pass']\"))\n            )\n            element.send_keys(\"Cawinom212\")\n    \n            element = WebDriverWait(driver, wait_time).until(\n                EC.presence_of_element_located((By.XPATH, \"//input[@id='submit-login']\"))\n            )\n            element.click()\n    \n            # Далее можно добавить какие-то проверки на содержимое страницы или другие действия\n            # Пример: Проверка, что заголовок страницы содержит определенный текст\n            assert \"escort\" in driver.title, f\"Failed to load link: {link}, Step: Opening page\"\n    \n        except Exception as e:\n            # Если произошла ошибка, добавляем ее в отчет pytest с указанием шага\n>           pytest.fail(f\"Failed to load link: {link}, Step: Opening page. Error: {e}\")\nE           Failed: Failed to load link: https://www.zuzana.com/, Step: Opening page. Error: Message: \nE           Stacktrace:\nE           \tGetHandleVerifier [0x00007FF6DA151502+60802]\nE           \t(No symbol) [0x00007FF6DA0CAC02]\nE           \t(No symbol) [0x00007FF6D9F87CE4]\nE           \t(No symbol) [0x00007FF6D9FD6D4D]\nE           \t(No symbol) [0x00007FF6D9FD6E1C]\nE           \t(No symbol) [0x00007FF6DA01CE37]\nE           \t(No symbol) [0x00007FF6D9FFABBF]\nE           \t(No symbol) [0x00007FF6DA01A224]\nE           \t(No symbol) [0x00007FF6D9FFA923]\nE           \t(No symbol) [0x00007FF6D9FC8FEC]\nE           \t(No symbol) [0x00007FF6D9FC9C21]\nE           \tGetHandleVerifier [0x00007FF6DA45411D+3217821]\nE           \tGetHandleVerifier [0x00007FF6DA4960B7+3488055]\nE           \tGetHandleVerifier [0x00007FF6DA48F03F+3459263]\nE           \tGetHandleVerifier [0x00007FF6DA20B846+823494]\nE           \t(No symbol) [0x00007FF6DA0D5F9F]\nE           \t(No symbol) [0x00007FF6DA0D0EC4]\nE           \t(No symbol) [0x00007FF6DA0D1052]\nE           \t(No symbol) [0x00007FF6DA0C18A4]\nE           \tBaseThreadInitThunk [0x00007FFABAC3257D+29]\nE           \tRtlUserThreadStart [0x00007FFABC10AA48+40]\n\ntests\\test_login.py:76: Failed"}, "parameters": [{"name": "link", "value": "'https://www.zuzana.com/'"}], "start": 1714221127572, "stop": 1714221159243, "uuid": "45a09726-6099-4fba-b836-ab1d08bd0f64", "historyId": "5a6f919e6bf54003b87af761ce5d6926", "testCaseId": "a4341ef11e2e4da24bc665da71ba82f5", "fullName": "tests.test_login#test_links", "labels": [{"name": "feature", "value": "Моя фича"}, {"name": "story", "value": "Мой сценарий"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "Bersi4Mikael"}, {"name": "thread", "value": "12816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}